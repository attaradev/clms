name: clms

# Shared logging config to keep logs small
x-logging: &default-logging
  driver: json-file
  options:
    max-size: "10m"
    max-file: "3"

services:
  # --- Laravel API (PHP-FPM + Composer on start) ---
  api:
    container_name: clms-api
    build:
      context: ./back-end
      dockerfile: dockerfiles/php.dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        USER: ${USER:-app}
    init: true
    restart: unless-stopped
    stop_grace_period: 30s
    logging: *default-logging
    working_dir: /var/www/html
    env_file:
      - ./back-end/.env
    environment:
      APP_URL: http://localhost:8000
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: "5432"
      DB_DATABASE: ${DB_DATABASE:-clms}
      DB_USERNAME: ${DB_USERNAME:-clms}
      DB_PASSWORD: ${DB_PASSWORD:-clms}
      REDIS_CLIENT: phpredis
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      WKHTML_PDF_BINARY: /usr/bin/wkhtmltopdf
      QUEUE_CONNECTION: database
      SEED_ON_BOOT: "${SEED_ON_BOOT:-true}"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    user: "0:0"
    volumes:
      - ./back-end:/var/www/html
      - vendor:/var/www/html/vendor
      - composer-cache:/tmp/composer-cache
    entrypoint: ["/bin/sh", "/var/www/html/entrypoint.sh"]
    command: ["php-fpm", "-F"]
    healthcheck:
      test: ["CMD-SHELL", "php -v >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - clms

  # --- Nginx (public API reverse proxy to Laravel API) ---
  proxy:
    container_name: clms-proxy
    build:
      context: ./back-end/dockerfiles
      dockerfile: nginx.dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        USER: ${USER:-app}
    init: true
    restart: unless-stopped
    stop_grace_period: 30s
    logging: *default-logging
    depends_on:
      api:
        condition: service_started
    ports:
      - "8000:80"
    volumes:
      - ./back-end:/var/www/html:ro
      - ./back-end/dockerfiles/nginx:/etc/nginx/conf.d:ro
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1/ >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - clms

  # --- Postgres ---
  db:
    container_name: clms-db
    image: postgres:16
    init: true
    restart: unless-stopped
    stop_grace_period: 30s
    logging: *default-logging
    environment:
      POSTGRES_DB: ${DB_DATABASE:-clms}
      POSTGRES_USER: ${DB_USERNAME:-clms}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-clms}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-clms} -d ${DB_DATABASE:-clms} -h 127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - clms

  # --- Redis ---
  redis:
    container_name: clms-redis
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    init: true
    restart: unless-stopped
    stop_grace_period: 30s
    logging: *default-logging
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -h 127.0.0.1 ping | grep PONG >/dev/null 2>&1"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - clms

  # --- Next.js web (talks to proxy at http://proxy:80) ---
  web:
    container_name: clms-web
    build:
      context: ./front-end
      dockerfile: Dockerfile
      secrets:
        - secret_cookie_password
    init: true
    restart: unless-stopped
    stop_grace_period: 30s
    logging: *default-logging
    env_file:
      - ./front-end/.env
    environment:
      APP_NAME: CLMS
      BACKEND_API_HOST: http://proxy:80
      COOKIE_SECURE: "false"
      NODE_ENV: production
    depends_on:
      proxy:
        condition: service_started
    ports:
      - "3000:3000"
    networks:
      - clms
    secrets:
      - source: secret_cookie_password
        target: SECRET_COOKIE_PASSWORD

secrets:
  secret_cookie_password:
    file: .secrets/SECRET_COOKIE_PASSWORD

volumes:
  pgdata:
  vendor:
  composer-cache:

networks:
  clms:
    name: clms_dev
    driver: bridge
